(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{539:function(n,t,e){var content=e(541);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(9).default)("6cb54f2e",content,!0,{sourceMap:!1})},540:function(n,t,e){"use strict";e(539)},541:function(n,t,e){var l=e(8)((function(i){return i[1]}));l.push([n.i,"",""]),l.locals={},n.exports=l},542:function(n,t,e){"use strict";e(159),e(545),e(50),e(51),e(204),e(160);var l=e(11),o={props:{currentLocale:{type:String,required:!0},doc:{type:Object,required:!0},file:{type:String,required:!0},path:{type:String,required:!0}},data:function(){return{isSearchOpen:!1,search:"",list:[]}},watch:{search:function(n){this.searchInPaths(n)}},mounted:function(){this.$nuxt.$on("toggleSearchDoc",this.toggleSearch)},beforeDestroy:function(){this.$nuxt.$off("toggleSearchDoc",this.toggleSearch)},methods:{tr:l.c,toggleSearch:function(){this.isSearchOpen=!this.isSearchOpen,this.isSearchOpen?document.body.style.overflow="hidden":document.body.style.overflow="auto"},searchInPaths:function(n){if(n=n.toLowerCase(),this.list=[],""!==n){var summary=this.tr(this.doc.info,"title",this.currentLocale).toLowerCase(),t=this.tr(this.doc.info,"description",this.currentLocale).toLowerCase(),e=t.indexOf(n);if(-1!==e){var l=Math.max(e-50,0),o=Math.min(e+n.length+50,t.length),c="..."+t.substring(l,o)+"...";c=c.replace(n,"<b>"+n+"</b>"),this.list.push({path:"info",title:summary,description:c,url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/get/info")})}for(var path in this.doc.paths)if("parameters"!==path){var r=this.doc.paths[path];for(var h in r){var d=r[h],j=this.tr(d,"summary",this.currentLocale).toLowerCase(),m=this.tr(d,"description",this.currentLocale).toLowerCase(),y=null,f=j.indexOf(n);if(-1!==f){var w=m.substring(0,100)+"...";y={path:d.path,title:j.replace(n,"<b>"+n+"</b>"),description:w+"...",url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/").concat(h,"/").concat(path)}}if(-1!==(f=m.indexOf(n))){var v=Math.max(f-50,0),x=Math.min(f+n.length+50,m.length),k="..."+m.substring(v,x)+"...";k=k.replace(n,"<b>"+n+"</b>"),y?y.description=k:y={path:d.path,title:j,description:k,url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/").concat(h,"/").concat(path)}}y&&this.list.push(y)}}}}}},c=(e(540),e(1)),component=Object(c.a)(o,(function(){var n=this,t=n._self._c;return t("div",{staticClass:"relative"},[n.isSearchOpen?t("div",{staticClass:"fixed fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"},[t("div",{staticClass:"w-full max-w-lg mx-auto"},[t("div",{staticClass:"bg-white dark:bg-black rounded-lg shadow-lg overflow-hidden"},[t("div",{staticClass:"px-4 py-3 shadow border-gray-200 dark:border-gray-800",staticStyle:{height:"300px","overflow-x":"scroll"}},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.search,expression:"search"}],staticClass:"w-full border-gray-200 dark:bg-black dark:border-gray-800 rounded-md px-3 py-2 focus:outline-none focus:border-blue-500",attrs:{type:"text",placeholder:"Search..."},domProps:{value:n.search},on:{input:function(t){t.target.composing||(n.search=t.target.value)}}}),n._v(" "),n._l(n.list,(function(e){return t("div",{staticClass:"mt-4"},[t("nuxt-link",{attrs:{to:e.url}},[t("div",{staticClass:"mt-2"},[t("div",{staticClass:"bg-gray-100 dark:bg-gray-900 rounded-md px-3 py-2"},[t("h5",{staticClass:"text-base font-medium text-gray-700",domProps:{innerHTML:n._s(e.title)}}),n._v(" "),t("p",{staticClass:"text-sm text-gray-400",staticStyle:{"font-size":"10px"},domProps:{textContent:n._s(e.path)}}),n._v(" "),t("p",{staticClass:"text-sm text-gray-500",domProps:{innerHTML:n._s(e.description)}})])])])],1)}))],2)])]),n._v(" "),t("button",{staticClass:"absolute top-0 right-0 m-3 text-gray-800 hover:text-gray-900 shadow bg-white/50 dark:text-gray-300/75",on:{click:n.toggleSearch}},[t("svg",{staticClass:"w-10 h-10 shadow",attrs:{fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"}},[t("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M6 18L18 6M6 6l12 12"}})])])]):n._e()])}),[],!1,null,null,null);t.a=component.exports},581:function(n,t,e){"use strict";e.r(t);var l=e(3),o=(e(21),e(159),e(204),e(338),e(337),e(339),e(543),e(544),e(17),e(6)),c=e(5),r=e(4),h=e(7),d=e(542),j={name:"AppDocs",layout:function(n){var t;return"apidocs-layout-".concat(null!==(t=n.route.params.file)&&void 0!==t?t:n.route.meta[0].file).replace(/["']/g,"").replace(/./g,"-")},components:{OpenApiInfo:o.a,OpenApiComponents:c.a,OpenApiRoute:r.a,NotFound:h.a,SearchBlock:d.a},fetch:function(){var n=this;return Object(l.a)(regeneratorRuntime.mark((function t(){var e,l,o,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e=n.$nuxt.context;try{n.currentLocale=null!==(l=e.route.params.locale)&&void 0!==l?l:e.route.meta[0].locale,n.type=null!==(o=e.route.params.type)&&void 0!==o?o:e.route.meta[0].type,n.path=null!==(c=e.route.params.path)&&void 0!==c?c:e.route.meta[0].path}catch(n){console.error(n),console.error(e.route)}case 2:case"end":return t.stop()}}),t)})))()},created:function(){this.$fetch()},data:function(){return{options:{folder:"./docs/openapi",name:"Api Docs",path:"docs",debug:!0,doc:{openapi:"3.0.0",info:{title:"Syntax Highlighting",version:"1.0.0",description:'<p>You may provide little snippets of code using markdown syntax and they will be color coded based on the language you specified as shown below</p>\n<pre><code>    ```java\n      some code...\n      ...\n      ...\n    ```\n</code></pre>\n<p>Following are the supported language codes that you may use for syntax highlighting</p>\n<ul>\n<li><code>bash</code> <code>shell</code></li>\n<li><code>markup</code> <code>html</code> <code>xml</code> <code>svg</code></li>\n<li><code>json</code></li>\n<li><code>yaml</code> <code>yml</code></li>\n<li><code>go</code></li>\n<li><code>javascript</code> <code>js</code></li>\n<li><code>java</code></li>\n<li><code>python</code> <code>py</code></li>\n<li><code>csharp</code> <code>cs</code></li>\n<li><code>http</code></li>\n<li><code>css</code></li>\n</ul>\n<p><strong>No Highlight</strong></p>\n<pre><code>$ curl -X POST -is -u username:password\n  -H &quot;Content-Type: application/json&quot; https://example.com\n  -d &#x27;{\n    &quot;target&quot;: {\n      &quot;ref_type&quot;: &quot;branch&quot;,\n      &quot;type&quot;: &quot;pipeline_ref_target&quot;,\n      &quot;ref_name&quot;: &quot;master&quot;\n    }\n  }&#x27;\n</code></pre>\n<p><strong>SHELL</strong> <code>shell</code> <code>bash</code></p>\n<pre><code class="hljs language-bash">$ curl -X POST -is -u username:password\n  -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> https://example.com\n  -d <span class="hljs-string">&#x27;{\n    &quot;target&quot;: {\n      &quot;ref_type&quot;: &quot;branch&quot;,\n      &quot;type&quot;: &quot;pipeline_ref_target&quot;,\n      &quot;ref_name&quot;: &quot;master&quot;\n    }\n  }&#x27;</span>\n</code></pre>\n<p><strong>MARKUP</strong> <code>markup</code> <code>html</code> <code>xml</code> <code>svg</code></p>\n<pre><code class="hljs language-markup">&lt;!doctype html&gt;\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt; &lt;!-- Important: rapi-doc uses utf8 characters --&gt;\n    &lt;script type=&quot;module&quot; src=&quot;https://unpkg.com/rapidoc/dist/rapidoc-min.js&quot;&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;rapi-doc spec-url=&quot;https://petstore.swagger.io/v2/swagger.json&quot;&gt; &lt;/rapi-doc&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>JSON</strong> <code>json</code></p>\n<pre><code class="hljs language-json"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;firstName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Mickey&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;lastName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Mouse&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">9</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;married&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span>\n<span class="hljs-punctuation">}</span>\n</code></pre>\n<p><strong>YAML</strong> <code>yaml</code> <code>yml</code></p>\n<pre><code class="hljs language-yaml"><span class="hljs-attr">openapi:</span> <span class="hljs-number">3.0</span><span class="hljs-number">.0</span>\n<span class="hljs-attr">info:</span>\n  <span class="hljs-attr">title:</span> <span class="hljs-string">Syntax</span> <span class="hljs-string">Highlighting</span>\n  <span class="hljs-attr">version:</span> <span class="hljs-number">1.0</span><span class="hljs-number">.0</span>\n  <span class="hljs-attr">description:</span> <span class="hljs-string">&gt;\n    Example of\n    Syntax highlighting</span>\n</code></pre>\n<p><strong>GO</strong> <code>go</code></p>\n<pre><code class="hljs language-go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">readFileAsLines</span><span class="hljs-params">(path <span class="hljs-type">string</span>)</span></span> ([]<span class="hljs-type">string</span>, <span class="hljs-type">error</span>) {\n  d, err := ioutil.ReadFile(path)\n  <span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>, err\n  }\n  s := <span class="hljs-type">string</span>(d)\n  res := strings.Split(s, <span class="hljs-string">&quot;\\n&quot;</span>)\n  <span class="hljs-keyword">return</span> res, <span class="hljs-literal">nil</span>\n}\n</code></pre>\n<p><strong>JAVA SCRIPT</strong> <code>javascript</code> <code>js</code></p>\n<pre><code class="hljs language-js">  <span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">x, y</span>) {\n    <span class="hljs-keyword">const</span> answer = x + y;\n    <span class="hljs-keyword">return</span> answer;\n  }\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++){\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">3</span>, i); <span class="hljs-comment">// prints in console</span>\n  }\n</code></pre>\n<p><strong>JAVA</strong> <code>java</code></p>\n<pre><code class="hljs language-java"><span class="hljs-type">BufferedWriter</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;\n<span class="hljs-keyword">try</span> {\n  out = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedWriter</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileWriter</span>(”filename”, <span class="hljs-literal">true</span>));\n  out.write(”aString”);\n} <span class="hljs-keyword">catch</span> (IOException e) {\n  <span class="hljs-comment">// error processing code</span>\n} <span class="hljs-keyword">finally</span> {\n  <span class="hljs-keyword">if</span> (out != <span class="hljs-literal">null</span>) {\n    out.close();\n  }\n}\n</code></pre>\n<p><strong>PYTHON</strong> <code>python</code> <code>py</code></p>\n<pre><code class="hljs language-python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/parse_data&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span>\n<span class="hljs-comment"># define the function</span>\n<span class="hljs-keyword">def</span> <span class="hljs-title function_">parse_data</span>():\n  <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:\n    search = request.get_json()\n    <span class="hljs-keyword">return</span> jsonify(search)\n  <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)\n</code></pre>\n<p><strong>C SHARP</strong> <code>chsarp</code> <code>cs</code></p>\n<pre><code class="hljs language-csharp"><span class="hljs-keyword">using</span> System.IO.Compression;\n\n<span class="hljs-keyword">namespace</span> <span class="hljs-title">MyApplication</span> {\n  [<span class="hljs-meta">Obsolete(<span class="hljs-string">&quot;...&quot;</span>)</span>]\n  <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span> : <span class="hljs-title">IInterface</span> {\n    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">List</span>&lt;<span class="hljs-title">int</span>&gt; <span class="hljs-title">JustDoIt</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> count</span>)</span> {\n      Console.WriteLine(<span class="hljs-string">$&quot;Hello <span class="hljs-subst">{Name}</span>!&quot;</span>);\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;(<span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] { <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> })\n    }\n  }\n}\n</code></pre>\n<p><strong>HTTP</strong> <code>http</code></p>\n<pre><code class="hljs language-http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/pet</span> <span class="hljs-meta">HTTP/1.1</span>\n<span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>example.org\n<span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json; charset=utf-8\n<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>137\n\n<span class="language-json"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ok&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;extended&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;results&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;int64&quot;</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n    <span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1.0e+3</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;decimal&quot;</span><span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">]</span>\n<span class="hljs-punctuation">}</span></span>\n</code></pre>\n'},paths:{code:{get:{summary:"Syntax Highlighting in Markdown",description:'<p>Syntax Highlighting in <strong>OPERATION DESCRIPTION</strong></p>\n<pre><code class="hljs language-http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/pet</span> <span class="hljs-meta">HTTP/1.1</span>\n<span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>example.org\n<span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json; charset=utf-8\n<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>137\n\n<span class="language-json"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ok&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;extended&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;results&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;int64&quot;</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n    <span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1.0e+3</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;decimal&quot;</span><span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">]</span>\n<span class="hljs-punctuation">}</span></span>\n</code></pre>\n',path:"/code",tags:["other"]},post:{summary:"Request body",requestBody:{description:'<p>Syntax Highlighting in <strong>REQUEST BODY</strong></p>\n<pre><code class="hljs language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">x, y</span>) {\n  <span class="hljs-keyword">const</span> answer = x + y;\n  <span class="hljs-keyword">return</span> answer;\n}\n\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++){\n  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">3</span>, i); <span class="hljs-comment">// prints in console</span>\n}\n</code></pre>\n',content:{"application/json":{schema:{type:"object",properties:{amount:{type:"integer"},currency:{type:"string"}},title:"schemas"}}}},responses:{200:{description:"Successful"}},path:"/code",tags:["other"]}}},components:{schemas:{Price:{type:"object",properties:{amount:{type:"integer"},currency:{type:"string"}},title:"schemas"}}}},locales:{en:"English"},pathsByTags:{other:{description:"",isOpen:!0,items:[{name:"/code",path:"code",type:"get",description:'Syntax Highlighting in **OPERATION DESCRIPTION**\n```http\nPOST /pet HTTP/1.1\nHost: example.org\nContent-Type: application/json; charset=utf-8\nContent-Length: 137\n\n{\n  "status": "ok",\n  "extended": true,\n  "results": [\n    {"value": 0, "type": "int64"},\n    {"value": 1.0e+3, "type": "decimal"}\n  ]\n}\n```\n'},{name:"/code",path:"code",type:"post",description:null}]}},fileName:"code-highlight"},path_doc:"docs",file:"code-highlight",currentLocale:"en",type:"",path:""}},watch:{"$route.meta":{handler:function(n){this.currentLocale=n.locale,this.type=n.type,this.path=n.path},deep:!0}},methods:{downloadYaml:function(){var n=JSON.stringify(this.doc,null,4),t=new Blob([n],{type:"application/json"}),e=URL.createObjectURL(t),link=document.createElement("a");link.href=e,link.download=this.file+".yaml",document.body.appendChild(link),link.click(),document.body.removeChild(link),URL.revokeObjectURL(e)}},computed:{doc:function(){return this.options.doc},name:function(){return this.options.name},simples:function(){return[{in:"queryString",name:"apikey",value:"1111"}]},isInfo:function(){return"info"===this.path},isComponents:function(){return"components"===this.path},activeRoute:function(){var n;return this.options.doc.paths&&this.options.doc.paths[this.path]&&null!==(n=this.options.doc.paths[this.path][this.type])&&void 0!==n?n:null},subParams:function(){var n;return this.options.doc.paths&&this.options.doc.paths[this.path]&&null!==(n=this.options.doc.paths[this.path].parameters)&&void 0!==n?n:null},server:function(){var n,t;return this.options.doc.paths&&this.options.doc.paths[this.path]&&this.options.doc.paths[this.path].servers&&this.options.doc.paths[this.path].servers[0]?null!==(t=this.options.doc.paths[this.path].servers[0].url)&&void 0!==t?t:null:this.options.doc.servers&&this.options.doc.servers[0]&&null!==(n=this.options.doc.servers[0].url)&&void 0!==n?n:null}},mounted:function(){this.$nuxt.$on("downloadYamlDoc",this.downloadYaml)},destroyed:function(){this.$nuxt.$off("downloadYamlDoc",this.downloadYaml)}},m=e(1),component=Object(m.a)(j,(function(){var n=this,t=n._self._c;return t("div",[n.isInfo?t("OpenApiInfo",{attrs:{info:n.doc.info,servers:n.doc.servers,"current-locale":n.currentLocale}}):n.isComponents?t("OpenApiComponents",{attrs:{components:n.doc.components,"current-locale":n.currentLocale}}):n.activeRoute?t("OpenApiRoute",{attrs:{route:n.activeRoute,"current-locale":n.currentLocale,method:n.type,components:n.doc.components,url:n.path,path_doc:n.path_doc,file:n.file,simples:n.simples,server:n.server,"sub-params":n.subParams}}):t("NotFound"),n._v(" "),t("SearchBlock",{attrs:{"current-locale":n.currentLocale,doc:n.doc,path:n.options.path,file:n.file}})],1)}),[],!1,null,null,null);t.default=component.exports}}]);