import{_ as v,a as b,b as w,c as y,d as k}from"./OpenApiMainContent.7d8016a9.js";import{a as I,z as V,M as x,b as l,h as s,w as n,e as r,o,c as p,j as i,T as u,N as M,G as T}from"./entry.1ce51ac4.js";import"./nuxt-link.0cc91d56.js";import"./helpers.75b0c43c.js";const A=!0,q=!1,O={name:"openapi-docs",setup(){{const a="large-spec",{$openapidoc:d}=V();if(!d.hasAccess(a))throw x({statusCode:404,message:"page not found"})}},async fetch(){try{this.$openapidoc.hasAccess(this.file)||this.$nuxt.context.error({status:404,message:"page not found"})}catch(a){console.error(a)}},created(){this&&this.$fetch&&this.$fetch()},watch:{"$route.meta":{handler:function(a){this.currentLocale=a.locale},deep:!0},$route:{handler:function(a){this.isMobile&&(this.isMenuOpen=!1)},deep:!0}},data(){return{pathsByTags:{Authentication:{name:"Authentication",description:`<p>The Authentication operation is the authentication layer when you integrate
data with Zuora Revenue APIs. Currently, this operation supports the basic authentication
with Zuora Revenue username and password. </p>
<p>To acquire the token, you must provide the role and client ID along with basic 
authorization in the HTTP request header. Username and password are base64-encoded texts 
that are passed in the HTTP authorization header. </p>
<p>An example of basic authorization header is as follows:       </p>
<p><code>Basic c3lzYWRtaW46fsDFsgsV2cHJvJTEyMw==</code></p>
<p>Zuora Revenue can authenticate and generate a token that can be valid for
a specific time period. If the issued token expires, you can call
this operation again with valid credentials to get a new token.
By default, a token will be valid for 30 minutes before it expires. Token expiration time 
can be changed based on your integration needs during provisioning.</p>
<p>An example of the returned authentication token is as follows:      </p>
<pre><code class="hljs language-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2V">ybmFtZSI6InZpbm90aC5iYWFsYWppIiwiaXNzIjoiUkV\`\`\`
</code></pre>
`,isOpen:!0,items:[{name:"/integration/v1/authenticate",path:"integration_v1_authenticate",type:"post",description:`Authenticates and gets the Json Web Token to push and pull data from your Zuora Revenue instance.
`}]},"File Upload":{name:"File Upload",description:`<p>The File Upload operations are used to upload large volumes of data as a CSV file in the HTTP body to Zuora Revenue and to get status information about the file upload.</p>
<p>If the data volume is in the range of 40k-60k records per file per request, the Upload file operation can process  the data quickly. 
A unique request ID is generated after the file is successfully received, which can be used  to query the upload status in the Get file upload status operation.    </p>
`,isOpen:!0,items:[{name:"/integration/v1/fileupload/status/{file_request_id}",path:"integration_v1_fileupload_status__file_request_id_",type:"get",description:"Gets the status information about the specified file upload request."},{name:"/integration/v1/upload/file",path:"integration_v1_upload_file",type:"post",description:`Uploads a CSV file to Zuora Revenue.

**Note:** Up to 60k lines per request can be supported by this operation.
`}]},Inbound:{name:"Inbound",description:`<p>The Inbound operations are used to upload data in the CSV format to Zuora Revenue. As a prerequisite,  the upload template definitions must be present in Zuora Revenue. Then, you specify the template name,  file name, authentication token, and the CSV data in HTTP body of the inbound operations to upload data. It is recommended to use the Create upload operation for the CSV file than contains less than 20k lines. </p>
<p>After the data is uploaded to the pre-stage table, Zuora Revenue scheduler will load the CSV content to corresponding staging tables in Zuora Revenue. You can query the upload status by using the Get upload status operation.</p>
`,isOpen:!0,items:[{name:"/integration/v1/csv/upload/status",path:"integration_v1_csv_upload_status",type:"get",description:"Gets the status information about the Create upload operation."},{name:"/integration/v1/csv/upload",path:"integration_v1_csv_upload",type:"post",description:`Uploads the transaction, events, or bundle configuration data in the CSV
format to Zuora Revenue.

**Note:** Up to 20k lines per request can be supported by this operation. If the CSV file contains more than 20k lines, it is recommended to use the <a href="https://www.zuora.com/developer/revpro-api/#operation/POST_UploadFile">Upload file</a> operation. 
`}]},"Transfer Accounting":{name:"Transfer Accounting",description:`<p>The Transfer Accounting operations are used to support outbound data integrations. You  can use these operations to query the transfer batch information and to update the transfer batch status.</p>
`,isOpen:!0,items:[{name:"/integration/v1/journal/batch/status/{batch_id}",path:"integration_v1_journal_batch_status__batch_id_",type:"put",description:"Updates the transfer batch status to `Transferred` in Zuora Revenue."},{name:"/integration/v1/journal/batch/{batch_id}/{page_num}",path:"integration_v1_journal_batch__batch_id___page_num_",type:"get",description:"Downloads the transfer batch data for the specified transfer batch ID and page number."},{name:"/integration/v1/journal/list",path:"integration_v1_journal_list",type:"get",description:"Gets a list of the transfer accounting batches that are available in Zuora Revenue."}]},"BI Views v1":{name:"BI Views v1",description:`<p>The BI Views V1 operations are used to download data for Zuora Revenue standard BI views.</p>
<p><strong>Note:</strong> </p>
<ul>
<li>Only the standard Zuora Revenue BI views are supported. </li>
<li>If the data volume to be processed exceeds 100k records per query, it is recommended to use <a href="https://www.zuora.com/developer/revpro-api/#tag/BI-Views-v2">BI Views V2</a> operations.</li>
</ul>
`,isOpen:!0,items:[{name:"/integration/v1/biviews/{tmpl_name}",path:"integration_v1_biviews__tmpl_name_",type:"get",description:"Retrieves the data from a BI view during the specified time period in a CSV file. \nUse the `fromDate` and `toDate` parameters to specify the time period for which \ndata is to be queried. You can also use the `count` parameter to get the row count \nfor the queried bi view data.\n"},{name:"/integration/v1/biviews/{tmpl_name}",path:"integration_v1_biviews__tmpl_name_",type:"post",description:`Fetches data in a CSV or gzip file from BI View.
`}]},"Transfer Accounting Files":{name:"Transfer Accounting Files",description:`<p>The Transfer Accounting Files operation is used to download the transfer accounting  data in a CSV file from Zuora Revenue for a specific transfer batch.</p>
`,isOpen:!0,items:[{name:"/integration/v1/download/transferbatchfile/{batch_id}",path:"integration_v1_download_transferbatchfile__batch_id_",type:"get",description:`Downloads the GL transfer batch files from Zuora Revenue for the specified batch ID. 


**Note:** 

* Only the transfer accounting files that are created in the last 48 hours are available for download.

* The maximum downloadable file size is 1 GB.
`}]},Reports:{name:"Reports",description:`<p>The Reports operations are used to download reports that are generated in Zuora Revenue. </p>
`,isOpen:!0,items:[{name:"/integration/v1/reports/download/{filename}",path:"integration_v1_reports_download__filename_",type:"get",description:`Downloads a specific report from Zuora Revenue.

 **Note:** 
 
 * Only the report files that are created in the last 48 hours are available for download. 

 * The maximum downloadable file size is 1 GB.
`},{name:"/integration/v1/reports/list",path:"integration_v1_reports_list",type:"get",description:"Gets a list of available reports that are created on a specified date."}]},"Stage Error":{name:"Stage Error",description:`<p>The Stage Error operation is used to get the list of records that contain errors in the Zuora Revenue staging tables for transactions or events.</p>
`,isOpen:!0,items:[{name:"/integration/v1/stage/error/{errortype}",path:"integration_v1_stage_error__errortype_",type:"get",description:"Gets the information about transaction staging errors or event staging errors."}]},Adapter:{name:"Adapter",description:`<p>The Adapter operation is used to retrieve field mapping information in an upload template definitions. The field mapping information determines the mapping between the staging field names and the label names in the upload file.</p>
`,isOpen:!0,items:[{name:"/integration/v1/upload/mapping",path:"integration_v1_upload_mapping",type:"get",description:"Gets the field mapping information in the upload template definitions for transactions, events, or bundle configuration from Zuora Revenue."}]},"BI Views v2":{name:"BI Views v2",description:`<p><strong>Note:</strong> This feature is in <strong>Limited Availability</strong> and is currently released only to the <strong>Zuora Revenue API Sandbox environment</strong>.  We are actively soliciting feedback from a small set of early adopters before releasing as generally available.</p>
<p>Starting from version 36.008.00, the BI Views V2 operations are provided to download data from the standard BI views. Compared with the previous version, BI Views V1, this new version has the following enhancements:</p>
<ul>
<li>In addition to CSV format, data can also be downloaded in a compressed format, gzip.</li>
<li>The number of rows on each downloaded page is increased. In the CSV format, each page can contain up to 10,000 rows. In the gzip format, each page can contain up to 20,000 rows.</li>
<li>The data volume of up to 5 million rows per query can be supported by using the BI Views V2 operations.</li>
<li>A continuation token is introduced to accelerate data download for multiple pages. After a request is made for the first page, a continuation token is returned in the response header. Meanwhile, subsequent pages are cached by the system. Using the continuation token  in the subsequent requests will make the system to retrieve data from the cache instead of re-executing the query against the database.</li>
<li>An operation to query the row count is introduced. You can know the number of rows to be returned before the actual download.</li>
</ul>
<p>For more information about the BI Views V2 operations, such as new feature introduction, suggested pattern to consume these APIs,  and sample codes, see <a href="https://knowledgecenter.zuora.com/Zuora_Revenue/Y_Integration_service_(BI_Views_V2)" target="_blank">Integration service (BI Views V2)</a> in Zuora Revenue Knowledge Center.</p>
`,isOpen:!0,items:[{name:"/integration/v2/biviews-status",path:"integration_v2_biviews-status",type:"get",description:"Gets the status information about all BI view related tasks."},{name:"/integration/v2/biviews-status/{task_id}",path:"integration_v2_biviews-status__task_id_",type:"delete",description:"Cancels the active tasks that are associated with the specified continuation token in the path."},{name:"/integration/v2/biviews-status/{task_id}",path:"integration_v2_biviews-status__task_id_",type:"get",description:"Gets the details of all active tasks for the specified continuation token."},{name:"/integration/v2/biviews/count/{tmpl_name}",path:"integration_v2_biviews_count__tmpl_name_",type:"get",description:`Gets the row count of a BI view.


**Note:** This operation starts a count query against the database for a full table scan.
It is helful to know the number of rows that will be returned before data download.
However, if the data volume is large, this operation might result in timeout responses.
`},{name:"/integration/v2/biviews/{tmpl_name}",path:"integration_v2_biviews__tmpl_name_",type:"get",description:`Downloads data from a BI view in a CSV or gzip file. 


If the data volume is large, it is recommended to use this operation to download Page 1 first. 
A continuation token will be returned in the response header. After that, provide the continuation 
token in this operation to download the subsequent pages.
`},{name:"/integration/v2/biviews/{tmpl_name}",path:"integration_v2_biviews__tmpl_name_",type:"post",description:"Fetches data in a CSV or gzip file from BI View."},{name:"/integration/v2/biviews/{tmpl_name}/describe-columns",path:"integration_v2_biviews__tmpl_name__describe-columns",type:"get",description:"Gets a list of columns that are contained in a BI view."}]}},files:{petstore_extended:"Petstore Extended Api",localization:"Localization","no-access":"no access","additional-props":"additional-props",allof:"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1",auth:"auth",callback:"callback",circular:"circular","code-highlight":"code-highlight",collapsable:"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params",events:"events","example-with-nested-refs":"example-with-nested-refs",examples:"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec",links:"links","markdown-headings":"markdown-headings",markdown:"markdown",mock:"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension",oauth:"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs",oneof:"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1",parameters:"parameters",petstore:"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions",schema:"schema","server-override":"server-override",server:"server","toomany-example-generation":"toomany-example-generation",xml:"xml"},path_doc:"docs",locales:{en:"English"},name:"Api Docs",isMenuOpen:!0,isMobile:!1,currentLocale:"en",file:"large-spec",isDarkMode:!1}},computed:{footer(){return this.$openapidoc.getFooter()},logo(){return this.$openapidoc.getLogo().replace(":name",this.name)},isVue2(){return q},isVue3(){return A}},methods:{toggleMenu(){this.isMenuOpen=!this.isMenuOpen},toggleDarkMode(){this.isDarkMode=!this.isDarkMode,localStorage.setItem("isDarkMode",this.isDarkMode),this.isDarkMode?document.querySelector("html").classList.add("dark"):document.querySelector("html").classList.remove("dark")},handleResize(){this.isDesktop=window.innerWidth>=639,this.isMobile=window.innerWidth<639,!this.isDesktop&&this.isMenuOpen&&(this.isMenuOpen=!1),this.isDesktop&&(this.isMenuOpen=!0)}},mounted(){this.isMobile=window.innerWidth<639,this.isMenuOpen=window.innerWidth>639,window.addEventListener("resize",this.handleResize),this.isDarkMode=localStorage.getItem("isDarkMode")==="true",this.isDarkMode&&document.querySelector("html").classList.add("dark")},unmounted(){window.removeEventListener("resize",this.handleResize)},beforeDestroy(){window.removeEventListener("resize",this.handleResize)}},R={class:"flex flex-col h-screen dark:bg-gray-900 dark:text-gray-300/75"},B=["innerHTML"],D={slot:"button"},S={class:"flex flex-1 overflow-hidden"},C={key:0},z={key:2,class:"fixed w-full bg-gray-900 py-8"},Z=["innerHTML"];function L(a,d,N,G,e,t){const c=y,h=v,m=k,f=b,g=T("Nuxt"),_=w;return o(),l("div",R,[s(h,{isMenuOpen:e.isMenuOpen,onToggleMenu:t.toggleMenu,class:"bg-blue dark:bg-blue"},{logo:n(()=>[r("span",{innerHTML:t.logo},null,8,B)]),default:n(()=>[r("div",D,[s(c,{"current-locale":e.currentLocale,files:e.files,locales:e.locales,file:e.file,path:e.path_doc,"is-dark-mode":e.isDarkMode,onToggleDarkMode:t.toggleDarkMode},null,8,["current-locale","files","locales","file","path","is-dark-mode","onToggleDarkMode"])])]),_:1},8,["isMenuOpen","onToggleMenu"]),r("div",S,[s(f,{isMenuOpen:e.isMenuOpen,isMobile:e.isMobile},{default:n(()=>[s(m,{routes:e.pathsByTags,"current-locale":e.currentLocale,file:e.file,path:e.path_doc,files:e.files,locales:e.locales},null,8,["routes","current-locale","file","path","files","locales"])]),_:1},8,["isMenuOpen","isMobile"]),s(_,{style:{"padding-bottom":"4rem"}},{default:n(()=>[t.isVue2?(o(),p(u,{key:0,name:"fade",tag:"div"},{default:n(()=>[t.isVue2?(o(),p(g,{key:0})):i("",!0)]),_:1})):i("",!0),t.isVue3?(o(),p(u,{key:1,name:"fade",tag:"div"},{default:n(()=>[t.isVue3?(o(),l("div",C,[t.isVue3?M(a.$slots,"default",{key:0}):i("",!0)])):i("",!0)]),_:3})):i("",!0),t.footer?(o(),l("footer",z,[r("div",{class:"container mx-auto flex justify-between bg-gray-100 text-gray-800 border-t border-gray-700 dark:bg-slate dark:text-gray-300/75",innerHTML:t.footer},null,8,Z)])):i("",!0)]),_:3})])])}const E=I(O,[["render",L]]);export{E as default};
