import{_ as u,a as g,b as y,c as f,d as b}from"./SearchBlock.bca23b98.js";import{a as j,f as v,r,b as x,c as i,h as _,o}from"./entry.a7680423.js";import"./helpers.75b0c43c.js";import"./nuxt-link.859f6161.js";const w={name:"AppDocs",layout:"apidocs-layout-collapsable",transition:{name:"fade"},head(){if(this.isInfo)return{title:"[] - Info Docs",description:""};if(this.isComponents)return{title:"[] - Components Docs",description:""};const e=this.activeRoute["x-summary-"]??this.activeRoute.summary??"",s=this.activeRoute["x-description-"]??this.activeRoute.description??"";return{title:"["+this.file+"] - "+e,description:s}},setup(){{const e=v(),s=r(e.params.locale??e.meta.locale),n=r(e.params.type??e.meta.type),a=r(e.params.path??e.meta.path);return{currentLocale:s,type:n,path:a}}},async fetch(){const e=this.$nuxt.context;try{this.currentLocale=e.route.params.locale??e.route.meta[0].locale,this.type=e.route.params.type??e.route.meta[0].type,this.path=e.route.params.path??e.route.meta[0].path}catch(s){console.error(s),console.error(e.route)}},created(){this&&this.$fetch&&this.$fetch()},data(){return{options:{folder:"./docs/openapi",name:"Api Docs",path:"docs",debug:!0,doc:{openapi:"3.0.0",info:{title:"Collapsible Tags",version:"1.0.0",description:`<p>Tags in openapi are used for grouping and ordering operations.<br/>
In RapiDoc&#39;s <code>view</code> mode these tags acts like an accordions, which you can expand or collapse.</p>
<p>By default all the tags are expanded, but if you wish to collapse certain tags at the beginning when the spec is loaded,<br/>
you may do so by using <code>x-tag-expanded</code> extension under <code>tags</code> section which can contain <code>true</code> or <code>false</code></p>
<p>below is an example how to achieve it</p>
<pre><code class="hljs language-yaml">  <span class="hljs-attr">openapi:</span> <span class="hljs-number">3.0</span><span class="hljs-number">.0</span>
  <span class="hljs-attr">info:</span>
    <span class="hljs-attr">version:</span> <span class="hljs-number">1.0</span><span class="hljs-number">.0</span>
    <span class="hljs-attr">title:</span> <span class="hljs-string">Collapsible</span> <span class="hljs-string">Tags</span>
  <span class="hljs-attr">paths:</span>
    <span class="hljs-string">...</span>
    <span class="hljs-string">...</span>
  <span class="hljs-attr">tags:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">Tag</span> <span class="hljs-number">1</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">Tag</span> <span class="hljs-number">2</span>
      <span class="hljs-attr">x-tag-expanded:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># &lt;-- extension to control expand collapse tags in RapiDoc</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">Tag</span> <span class="hljs-number">3</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">Tag</span> <span class="hljs-number">4</span>
</code></pre>
<p>Even if a tag is closed, you can create links to operations inside them.<br/> 
Upon clicking the link, it will open the tag if it is closed and navigate to operation&#39;s location </p>
<p>Example: <strong><a href="#get-/path1-in-closed-tag">Link</a></strong> for <code>path1-in-closed-tag</code></p>
`},paths:{"path1-in-open-tag":{get:{summary:"Path 1 under open tag",tags:["Open"],parameters:[{name:"name",in:"query",schema:{type:"string"}},{name:"age",in:"query",schema:{type:"integer"}}],responses:{200:{description:"Happy response",content:{"application/json":{schema:{type:"object",properties:{id:{description:"User ID",type:"integer"},email:{description:"User Email",type:"string"},name:{description:"First Name",type:"string"}},title:"schemas"}}}}},path:"/path1-in-open-tag"}},"path2-in-open-tag":{get:{summary:"Path 2 under open tag",tags:["Open"],parameters:[{name:"name",in:"query",schema:{type:"string"}}],responses:{200:{description:"Happy response",content:{"application/json":{schema:{type:"object",properties:{job:{type:"string"},grade:{type:"string"}},title:"schemas"}}}}},path:"/path2-in-open-tag"}},"path1-in-closed-tag":{get:{summary:"Path 1 under closed tag",tags:["Closed"],parameters:[{name:"city",in:"query",schema:{type:"string"}},{name:"state",in:"query",schema:{type:"string"}}],responses:{200:{description:"Happy response",content:{"application/json":{schema:{type:"object",properties:{job:{type:"string"},grade:{type:"string"}},title:"schemas"}}}}},path:"/path1-in-closed-tag"}},"path2-in-closed-tag":{get:{summary:"Path 2 under closed tag",tags:["Closed"],parameters:[{name:"grade",in:"query",schema:{type:"string"}},{name:"salary",in:"query",schema:{type:"integer"}}],responses:{200:{description:"Happy response",content:{"application/json":{schema:{type:"object",properties:{job:{type:"string"},grade:{type:"string"}},title:"schemas"}}}}},path:"/path2-in-closed-tag"}},"No-Tags":{get:{summary:"This path dont have any tag associated with it. (It gets created from the path)",responses:{200:{description:"Happy response",content:{"application/json":{schema:{type:"object",properties:{id:{description:"User ID",type:"integer"},email:{description:"User Email",type:"string"},name:{description:"First Name",type:"string"}},title:"schemas"}}}}},path:"/No-Tags",tags:["other"]}}},tags:[{name:"Open",description:`<p>This tag is <strong>open</strong> by default, and it contains 2 paths inside it.</p>
`},{name:"Closed",description:`<p>This tag is <strong>closed</strong> in the begining when the spec loads. It achieved by using <code>x-tag-expanded</code> extension</p>
`,"x-tag-expanded":!1}],components:{schemas:{user:{type:"object",properties:{id:{description:"User ID",type:"integer"},email:{description:"User Email",type:"string"},name:{description:"First Name",type:"string"}},title:"schemas"},job:{type:"object",properties:{job:{type:"string"},grade:{type:"string"}},title:"schemas"}}}},isNuxt3:!0,isNuxt2:!1,locales:{en:"English"},pathsByTags:{Open:{name:"Open",description:`<p>This tag is <strong>open</strong> by default, and it contains 2 paths inside it.</p>
`,isOpen:!0,items:[{name:"/path1-in-open-tag",path:"path1-in-open-tag",type:"get",description:null},{name:"/path2-in-open-tag",path:"path2-in-open-tag",type:"get",description:null}]},Closed:{name:"Closed",description:`<p>This tag is <strong>closed</strong> in the begining when the spec loads. It achieved by using <code>x-tag-expanded</code> extension</p>
`,isOpen:!1,items:[{name:"/path1-in-closed-tag",path:"path1-in-closed-tag",type:"get",description:null},{name:"/path2-in-closed-tag",path:"path2-in-closed-tag",type:"get",description:null}]},other:{name:"other",description:"",isOpen:!0,items:[{name:"/No-Tags",path:"No-Tags",type:"get",description:null}]}},fileName:"collapsable",layoutName:"apidocs-layout-collapsable",files:{petstore_extended:"Petstore Extended Api",localization:"Localization","no-access":"no access","additional-props":"additional-props",allof:"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1",auth:"auth",callback:"callback",circular:"circular","code-highlight":"code-highlight",collapsable:"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params",events:"events","example-with-nested-refs":"example-with-nested-refs",examples:"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec",links:"links","markdown-headings":"markdown-headings",markdown:"markdown",mock:"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension",oauth:"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs",oneof:"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1",parameters:"parameters",petstore:"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions",schema:"schema","server-override":"server-override",server:"server","toomany-example-generation":"toomany-example-generation",xml:"xml"}},path_doc:"docs",file:"collapsable"}},watch:{"$route.meta":{handler:function(e){this.currentLocale=e.locale,this.type=e.type,this.path=e.path},deep:!0}},methods:{downloadYaml(){const e=JSON.stringify(this.doc,null,4),s=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(s),a=document.createElement("a");a.href=n,a.download=this.file+".yaml",document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n)}},computed:{doc(){return this.options.doc},name(){return this.options.name},isInfo(){return this.path==="info"},isComponents(){return this.path==="components"},activeRoute(){return!this.options.doc.paths||!this.options.doc.paths[this.path]?null:this.options.doc.paths[this.path][this.type]??null},subParams(){return!this.options.doc.paths||!this.options.doc.paths[this.path]?null:this.options.doc.paths[this.path].parameters??null},server(){return this.options.doc.paths&&this.options.doc.paths[this.path]&&this.options.doc.paths[this.path].servers&&this.options.doc.paths[this.path].servers[0]?this.options.doc.paths[this.path].servers[0].url??null:!this.options.doc.servers||!this.options.doc.servers[0]?null:this.options.doc.servers[0].url??null}},mounted(){this.$openapidocBus.$on("downloadYamlDoc",this.downloadYaml)},unmounted(){this.$openapidocBus.$off("downloadYamlDoc",this.downloadYaml)},destroyed(){this.$openapidocBus.$off("downloadYamlDoc",this.downloadYaml)}};function k(e,s,n,a,p,t){const l=u,c=g,h=y,d=b,m=f;return o(),x("div",null,[t.isInfo?(o(),i(l,{key:0,info:t.doc.info,servers:t.doc.servers,"current-locale":e.currentLocale},null,8,["info","servers","current-locale"])):t.isComponents?(o(),i(c,{key:1,components:t.doc.components,"current-locale":e.currentLocale},null,8,["components","current-locale"])):t.activeRoute?(o(),i(h,{key:2,route:t.activeRoute,"current-locale":e.currentLocale,method:e.type,components:t.doc.components,url:e.path,path_doc:p.path_doc,file:p.file,server:t.server,"sub-params":t.subParams},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(o(),i(d,{key:3})),_(m,{"current-locale":e.currentLocale,doc:t.doc,path:p.options.path,file:p.file},null,8,["current-locale","doc","path","file"])])}const O=j(w,[["render",k]]);export{O as default};
