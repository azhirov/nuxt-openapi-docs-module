(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{543:function(e,t,o){var content=o(545);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,o(9).default)("6cb54f2e",content,!0,{sourceMap:!1})},544:function(e,t,o){"use strict";o(543)},545:function(e,t,o){var r=o(8)((function(i){return i[1]}));r.push([e.i,"",""]),r.locals={},e.exports=r},546:function(e,t,o){"use strict";o(17),o(549),o(57),o(58),o(19),o(161);var r=o(11),n={props:{currentLocale:{type:String,required:!0},doc:{type:Object,required:!0},file:{type:String,required:!0},path:{type:String,required:!0}},data:function(){return{isSearchOpen:!1,search:"",list:[]}},watch:{search:function(e){this.searchInPaths(e)}},mounted:function(){this.$nuxt.$on("toggleSearchDoc",this.toggleSearch)},beforeDestroy:function(){this.$nuxt.$off("toggleSearchDoc",this.toggleSearch)},methods:{tr:r.c,toggleSearch:function(){this.isSearchOpen=!this.isSearchOpen,this.isSearchOpen?document.body.style.overflow="hidden":document.body.style.overflow="auto"},searchInPaths:function(e){if(e=e.toLowerCase(),this.list=[],""!==e){var summary=this.tr(this.doc.info,"title",this.currentLocale).toLowerCase(),t=this.tr(this.doc.info,"description",this.currentLocale).toLowerCase(),o=t.indexOf(e);if(-1!==o){var r=Math.max(o-50,0),n=Math.min(o+e.length+50,t.length),c="..."+t.substring(r,n)+"...";c=c.replace(e,"<b>"+e+"</b>"),this.list.push({path:"info",title:summary,description:c,url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/get/info")})}for(var path in this.doc.paths)if("parameters"!==path){var l=this.doc.paths[path];for(var m in l){var d=l[m],h=this.tr(d,"summary",this.currentLocale).toLowerCase(),y=this.tr(d,"description",this.currentLocale).toLowerCase(),f=null,v=h.indexOf(e);if(-1!==v){var x=y.substring(0,100)+"...";f={path:d.path,title:h.replace(e,"<b>"+e+"</b>"),description:x+"...",url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/").concat(m,"/").concat(path)}}if(-1!==(v=y.indexOf(e))){var w=Math.max(v-50,0),j=Math.min(v+e.length+50,y.length),C="..."+y.substring(w,j)+"...";C=C.replace(e,"<b>"+e+"</b>"),f?f.description=C:f={path:d.path,title:h,description:C,url:"/".concat(this.path,"/").concat(this.file,"/").concat(this.currentLocale,"/").concat(m,"/").concat(path)}}f&&this.list.push(f)}}}}}},c=(o(544),o(1)),component=Object(c.a)(n,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"relative"},[e.isSearchOpen?t("div",{staticClass:"fixed fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"},[t("div",{staticClass:"w-full max-w-lg mx-auto"},[t("div",{staticClass:"bg-white dark:bg-black rounded-lg shadow-lg overflow-hidden"},[t("div",{staticClass:"px-4 py-3 shadow border-gray-200 dark:border-gray-800",staticStyle:{height:"300px","overflow-x":"scroll"}},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.search,expression:"search"}],staticClass:"w-full border-gray-200 dark:bg-black dark:border-gray-800 rounded-md px-3 py-2 focus:outline-none focus:border-blue-500",attrs:{type:"text",placeholder:"Search..."},domProps:{value:e.search},on:{input:function(t){t.target.composing||(e.search=t.target.value)}}}),e._v(" "),e._l(e.list,(function(o){return t("div",{staticClass:"mt-4"},[t("nuxt-link",{attrs:{to:o.url}},[t("div",{staticClass:"mt-2"},[t("div",{staticClass:"bg-gray-100 dark:bg-gray-900 rounded-md px-3 py-2"},[t("h5",{staticClass:"text-base font-medium text-gray-700",domProps:{innerHTML:e._s(o.title)}}),e._v(" "),t("p",{staticClass:"text-sm text-gray-400",staticStyle:{"font-size":"10px"},domProps:{textContent:e._s(o.path)}}),e._v(" "),t("p",{staticClass:"text-sm text-gray-500",domProps:{innerHTML:e._s(o.description)}})])])])],1)}))],2)])]),e._v(" "),t("button",{staticClass:"absolute top-0 right-0 m-3 text-gray-800 hover:text-gray-900 shadow bg-white/50 dark:text-gray-300/75",on:{click:e.toggleSearch}},[t("svg",{staticClass:"w-10 h-10 shadow",attrs:{fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"}},[t("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M6 18L18 6M6 6l12 12"}})])])]):e._e()])}),[],!1,null,null,null);t.a=component.exports},589:function(e,t,o){"use strict";o.r(t);var r=o(3),n=(o(23),o(17),o(19),o(342),o(341),o(343),o(547),o(548),o(18),o(6)),c=o(5),l=o(4),m=o(7),d=o(546),h=o(11),y={name:"AppDocs",layout:function(e){var t;return"apidocs-layout-".concat(null!==(t=e.route.params.file)&&void 0!==t?t:e.route.meta[0].file).replace(/["']/g,"").replace(/./g,"-")},components:{OpenApiInfo:n.a,OpenApiComponents:c.a,OpenApiRoute:l.a,NotFound:m.a,SearchBlock:d.a},head:function(){return this.isInfo?{title:"[".concat(this.file,"] - Info Docs"),description:""}:this.isComponents?{title:"[".concat(this.file,"] - Components Docs"),description:""}:{title:"["+this.file+"] - "+Object(h.c)(this.activeRoute,"summary",this.currentLocale),description:Object(h.c)(this.activeRoute,"description",this.currentLocale)}},fetch:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function t(){var o,r,n,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:o=e.$nuxt.context;try{e.currentLocale=null!==(r=o.route.params.locale)&&void 0!==r?r:o.route.meta[0].locale,e.type=null!==(n=o.route.params.type)&&void 0!==n?n:o.route.meta[0].type,e.path=null!==(c=o.route.params.path)&&void 0!==c?c:o.route.meta[0].path}catch(e){console.error(e),console.error(o.route)}case 2:case"end":return t.stop()}}),t)})))()},created:function(){this.$fetch()},data:function(){return{options:{folder:"./docs/openapi",name:"Api Docs",path:"docs",debug:!0,doc:{openapi:"3.0.0",info:{description:"Contains all data types",version:"1.0.0",title:"Testing different data-types"},paths:{"nested-object-in-request-body":{post:{tags:["Test with various data types"],summary:"Request Body accepting a JSON",requestBody:{content:{"application/json":{schema:{type:"object",required:["name","photoUrls"],properties:{primaryEmail:{type:"string",format:"email"},dob:{description:"Date of Birth",type:"string",format:"date"},id:{title:"Unique ID",description:"SSN",allOf:[{type:"string",format:"uuid",title:"schemas"}]},category:{title:"Person Category",description:"Categories this person belongs to",allOf:[{type:"object",properties:{catId:{description:"Category ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Category name",type:"string",deprecated:!0}},title:"schemas"}]},country:{type:"object",deprecated:!0,properties:{countryCode:{type:"string"},countryName:{type:"string"}}},dependentIds:{type:"array",deprecated:!0,description:"IDs of Dependents .",items:{type:"integer"},example:[278,279,280,281]},name:{description:"Name of the person",type:"string",minLength:4,examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,items:{type:"string",format:"url"}},tags:{title:"TAGS",description:"Tags attached to the person",type:"array",minItems:1,items:{type:"object",properties:{id:{description:"Tag ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Tag name",type:"string",minLength:1}},title:"schemas"}},maritalStatus:{type:"string",description:"Marital status in case of adult",enum:["married","unmarried","widowed"]},phone:{description:"phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0}},title:"schemas"}}}},path:"/nested-object-in-request-body"}},"nested-object":{get:{tags:["Test with various data types"],summary:"Nested object",description:'<p>Response schema is made up of multiple nested object, For simple schema check out <a href="#get-/simple-object">simple object</a></p>\n',responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",description:"<p>Description of <strong>Person</strong> object (Person must be bold)</p>\n",properties:{age:{description:"<p>Person&#39;s <strong>Age</strong> (age must be bold)</p>\n",type:"integer"},fullName:{description:"Person&#x27;s Full name",type:"object",properties:{firstName:{description:"_First name_ (First name should be italics)",type:"string"},lastName:{description:"`Last name` (last name must be monospaced)\n",type:"string"}}},dependentIds:{type:"array",description:"IDs of Dependents .",items:{type:"integer"}},dependentNames:{type:"array",description:"<p>Full Name of <strong>Dependents</strong> (Dependents must be bold).</p>\n",items:{type:"object",properties:{firstNameParts:{description:"<p>Parts of <strong>First Name</strong> (First Name must be bold)</p>\n",type:"object",properties:{firstName:{description:"This is a very very long description to test how will it show up on a API spec renderer tool such as RapiDoc. This lable must be big enough to wrap into next line",type:"string"},aLongFieldForTestingHowItShowsUpInSchemaModelWhenItEncountersLongField:{description:"Dependent Last Name",type:"string"}}},dependentLastName:{description:"Dependent Last Name",type:"string"}}}},hobbies:{type:"array",description:"array of objects",items:{type:"object"}}}}}}}},path:"/nested-object"}},"simple-object":{get:{tags:["Test with various data types"],summary:"Simple object",description:'<p>Response schema is a simple object, which contains only primitive properties. For complex schema check out <a href="#get-/nested-object">nested object</a></p>\n',responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{name:{description:"Person Name",type:"string"},age:{description:"Person Age",type:"integer",minimum:1,maximum:100}}}}}}},path:"/simple-object"}},person:{post:{tags:["Test with various data types"],summary:"Data Types with constraints",description:"Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below",parameters:[{name:"height",in:"query",description:"height (in inches)",required:!0,example:70,schema:{type:"integer",format:"int32",minimum:12,maximum:120}},{name:"full-name",in:"query",description:"Name of a person",required:!0,schema:{type:"string",minimum:3},examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name",description:"<p><code>Lorem ipsum dolor sit amet</code> consectetur adipisicing elit.</p>\n<ol>\n<li>Animi alias iste</li>\n<li>minus iure</li>\n<li>assumenda quisquam</li>\n<li>qui cum id ab nesciunt</li>\n</ol>\n<p><em>Impedit voluptatum asperiores obcaecati blanditiis</em> perferendis error repudiandae odit, veniam ab culpa exercitationem eaque,</p>\n<blockquote>\n<p>repellat <strong>laboriosam sequi dolor doloribus</strong> voluptas</p>\n</blockquote>\n<p> natus hic fugiat incidunt.</p>\n<ul>\n<li>laborum odio dolore</li>\n<li>corrupti tenetur</li>\n<li>nostrum aut sunt,</li>\n</ul>\n<p>quis vel neque. Vitae maxime aut assumenda ipsum.</p>\n"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},{name:"social-connection",in:"query",description:"facebook, linkedin, github, instagram, twitter etc",schema:{type:"string",format:"url"}},{name:"email",in:"query",required:!0,schema:{type:"string",format:"email"}},{name:"email-password",in:"query",required:!0,schema:{type:"string",format:"password"}},{name:"date-of-birth",in:"query",required:!0,schema:{type:"string",format:"date"}},{name:"phone-deprecated",in:"query","x-fill-example":"no",example:12345,deprecated:!0,schema:{type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/"}},{name:"marital-status",in:"query",required:!0,example:"married",schema:{type:"string",enum:["married","unmarried","widowed","unknown"],default:"unknown"}},{name:"interests",in:"query",required:!0,description:"__Exploded Array__ will send separate querystring parameter for each items eg - `interests=computers&interests=movies`",schema:{type:"array",example:["computers","reading",["music","movies"]],minItems:1,maxItems:3,items:{type:"string",enum:["computers","hiking","swiming","movies","music","dancing","reading","painting"],default:"hiking"}}},{name:"tags",in:"query",description:"__Not Exploded Array__ will send a single querystring parameter with comma separated string eg - `tags=tall,dark,handsome`",style:"form",explode:!1,schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:{type:"object",required:["name","photoUrls"],properties:{primaryEmail:{type:"string",format:"email"},dob:{description:"Date of Birth",type:"string",format:"date"},id:{title:"Unique ID",description:"SSN",allOf:[{type:"string",format:"uuid",title:"schemas"}]},category:{title:"Person Category",description:"Categories this person belongs to",allOf:[{type:"object",properties:{catId:{description:"Category ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Category name",type:"string",deprecated:!0}},title:"schemas"}]},country:{type:"object",deprecated:!0,properties:{countryCode:{type:"string"},countryName:{type:"string"}}},dependentIds:{type:"array",deprecated:!0,description:"IDs of Dependents .",items:{type:"integer"},example:[278,279,280,281]},name:{description:"Name of the person",type:"string",minLength:4,examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,items:{type:"string",format:"url"}},tags:{title:"TAGS",description:"Tags attached to the person",type:"array",minItems:1,items:{type:"object",properties:{id:{description:"Tag ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Tag name",type:"string",minLength:1}},title:"schemas"}},maritalStatus:{type:"string",description:"Marital status in case of adult",enum:["married","unmarried","widowed"]},phone:{description:"phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0}},title:"schemas"}}}}}},path:"/person"}}},components:{schemas:{category:{type:"object",properties:{catId:{description:"Category ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Category name",type:"string",deprecated:!0}}},id:{type:"string",format:"uuid",title:"schemas"},person:{type:"object",required:["name","photoUrls"],properties:{primaryEmail:{type:"string",format:"email"},dob:{description:"Date of Birth",type:"string",format:"date"},id:{title:"Unique ID",description:"SSN",allOf:[{type:"string",format:"uuid",title:"schemas"}]},category:{title:"Person Category",description:"Categories this person belongs to",allOf:[{type:"object",properties:{catId:{description:"Category ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Category name",type:"string",deprecated:!0}},title:"schemas"}]},country:{type:"object",deprecated:!0,properties:{countryCode:{type:"string"},countryName:{type:"string"}}},dependentIds:{type:"array",deprecated:!0,description:"IDs of Dependents .",items:{type:"integer"},example:[278,279,280,281]},name:{description:"Name of the person",type:"string",minLength:4,examples:{empty:{value:null,summary:"No Name"},"male-name":{value:"James",summary:"Male name"},"female-name":{value:"Ria",summary:"Female Name"},"gender-nutral-name":{value:"Charlie",summary:"Gender Neutral Name"}}},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,items:{type:"string",format:"url"}},tags:{title:"TAGS",description:"Tags attached to the person",type:"array",minItems:1,items:{type:"object",properties:{id:{description:"Tag ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Tag name",type:"string",minLength:1}},title:"schemas"}},maritalStatus:{type:"string",description:"Marital status in case of adult",enum:["married","unmarried","widowed"]},phone:{description:"phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0}},title:"schemas"},tag:{type:"object",properties:{id:{description:"Tag ID",allOf:[{type:"string",format:"uuid",title:"schemas"}]},name:{description:"Tag name",type:"string",minLength:1}},title:"schemas"}}}},locales:{en:"English"},pathsByTags:{"Test with various data types":{name:"Test with various data types",description:"",isOpen:!0,items:[{name:"/nested-object-in-request-body",path:"nested-object-in-request-body",type:"post",description:null},{name:"/nested-object",path:"nested-object",type:"get",description:"Response schema is made up of multiple nested object, For simple schema check out [simple object](#get-/simple-object)"},{name:"/simple-object",path:"simple-object",type:"get",description:"Response schema is a simple object, which contains only primitive properties. For complex schema check out [nested object](#get-/nested-object)"},{name:"/person",path:"person",type:"post",description:"Request-Parameters and Response-Schema contains various data types and constrains. Check out how is it desplayed below"}]}},fileName:"data-types",files:{petstore_extended:"Petstore Extended Api",localization:"Localization","no-access":"no access","additional-props":"additional-props",allof:"allof","arr-of-arr":"arr-of-arr","arrange-by-tags":"arrange-by-tags","array-and-object-nesting":"array-and-object-nesting","auth-test1":"auth-test1",auth:"auth",callback:"callback",circular:"circular","code-highlight":"code-highlight",collapsable:"collapsable","data-types-simple":"data-types-simple","data-types":"data-types","dynamic-form-params":"dynamic-form-params","dynamic-query-params":"dynamic-query-params",events:"events","example-with-nested-refs":"example-with-nested-refs",examples:"examples","file-upload":"file-upload","fill-example-test":"fill-example-test","large-spec":"large-spec",links:"links","markdown-headings":"markdown-headings",markdown:"markdown",mock:"mock","multi-datatypes-test":"multi-datatypes-test","multi-datatypes":"multi-datatypes","multipart-formdata":"multipart-formdata","multiple-oneof":"multiple-oneof","multiple-security-schemes":"multiple-security-schemes","no-server":"no-server","oauth-demo":"oauth-demo","oauth-o365":"oauth-o365","oauth-vendor-extension":"oauth-vendor-extension",oauth:"oauth","oneof-allof-nested":"oneof-allof-nested","oneof-combinations":"oneof-combinations","oneof-with-refs":"oneof-with-refs",oneof:"oneof","open-api-3-1-test":"open-api-3-1-test","open-api-3-1":"open-api-3-1",parameters:"parameters",petstore:"petstore","post-nobody":"post-nobody","request-body-multiple":"request-body-multiple","schema-title-and-descriptions":"schema-title-and-descriptions",schema:"schema","server-override":"server-override",server:"server","toomany-example-generation":"toomany-example-generation",xml:"xml"}},path_doc:"docs",file:"data-types",currentLocale:"en",type:"",path:""}},watch:{"$route.meta":{handler:function(e){this.currentLocale=e.locale,this.type=e.type,this.path=e.path},deep:!0}},methods:{downloadYaml:function(){var e=JSON.stringify(this.doc,null,4),t=new Blob([e],{type:"application/json"}),o=URL.createObjectURL(t),link=document.createElement("a");link.href=o,link.download=this.file+".yaml",document.body.appendChild(link),link.click(),document.body.removeChild(link),URL.revokeObjectURL(o)}},computed:{doc:function(){return this.options.doc},name:function(){return this.options.name},isInfo:function(){return"info"===this.path},isComponents:function(){return"components"===this.path},activeRoute:function(){var e;return this.options.doc.paths&&this.options.doc.paths[this.path]&&null!==(e=this.options.doc.paths[this.path][this.type])&&void 0!==e?e:null},subParams:function(){var e;return this.options.doc.paths&&this.options.doc.paths[this.path]&&null!==(e=this.options.doc.paths[this.path].parameters)&&void 0!==e?e:null},server:function(){var e,t;return this.options.doc.paths&&this.options.doc.paths[this.path]&&this.options.doc.paths[this.path].servers&&this.options.doc.paths[this.path].servers[0]?null!==(t=this.options.doc.paths[this.path].servers[0].url)&&void 0!==t?t:null:this.options.doc.servers&&this.options.doc.servers[0]&&null!==(e=this.options.doc.servers[0].url)&&void 0!==e?e:null}},mounted:function(){this.$nuxt.$on("downloadYamlDoc",this.downloadYaml)},destroyed:function(){this.$nuxt.$off("downloadYamlDoc",this.downloadYaml)}},f=o(1),component=Object(f.a)(y,(function(){var e=this,t=e._self._c;return t("div",[e.isInfo?t("OpenApiInfo",{attrs:{info:e.doc.info,servers:e.doc.servers,"current-locale":e.currentLocale}}):e.isComponents?t("OpenApiComponents",{attrs:{components:e.doc.components,"current-locale":e.currentLocale}}):e.activeRoute?t("OpenApiRoute",{attrs:{route:e.activeRoute,"current-locale":e.currentLocale,method:e.type,components:e.doc.components,url:e.path,path_doc:e.path_doc,file:e.file,server:e.server,"sub-params":e.subParams}}):t("NotFound"),e._v(" "),t("SearchBlock",{attrs:{"current-locale":e.currentLocale,doc:e.doc,path:e.options.path,file:e.file}})],1)}),[],!1,null,null,null);t.default=component.exports}}]);